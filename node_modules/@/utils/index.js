/**
 * Does nothing
 * 
 * @returns {void}
 */
module.exports.noop = () => { }

/**
 * Returns the value passed in
 * 
 * @param {*} v - The value to return untouched
 * @returns {*} 
 */
module.exports.id = v => v

/**
 * Checks that a value is truthy, throwing an error if not
 * 
 * @param {*} value - The value to check if it is truthy or not
 * @param {string=} msg - The message to print as the error message
 * @throws {TypeError}
 * @returns {void}
 */
module.exports.invariant = (value, msg) => {
  if (!value) {
    throw new TypeError(msg || `Expected variant to be truthy, got ${value} instead.`)
  }
}

/**
 * Creates a v4 UUID
 * 
 * @returns {string}
 */
module.exports.uuid = () => {
  const base_str = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'
  return base_str.replace(/[xy]/g, function (c) {
    const r = Math.random() * 16 | 0

    const v = c == 'x'
      ? r
      : (r & 0x3 | 0x8)

    return v.toString(16)
  });
}